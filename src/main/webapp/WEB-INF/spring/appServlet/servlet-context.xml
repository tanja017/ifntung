<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
	http://www.springframework.org/schema/mvc 
	http://www.springframework.org/schema/mvc/spring-mvc.xsd
	http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<context:component-scan base-package="controllers" >
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	<mvc:annotation-driven />
	<context:component-scan base-package="com.example.springandtiles" />
	
	<!-- <mvc:resources mapping="/resources/**" location="/resources/" /> -->
 
 	<mvc:resources mapping="/resources/**" location="/resources/theme1/"  
	cache-period="31556926"/>
 
    <!-- Resolves views selected for rendering by @Controllers to .jsp resources 
        in the /WEB-INF/views directory -->
    <beans:bean
        class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <beans:property name="prefix" value="/WEB-INF/views/" />
        <beans:property name="suffix" value=".jsp" />
    </beans:bean>
 
    <!-- Tiles configuration -->
 
    <beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
    <beans:property name="definitions" value="/WEB-INF/tiles/tiles-definitions.xml" />
    <beans:property name="preparerFactoryClass" value="org.springframework.web.servlet.view.tiles2.SpringBeanPreparerFactory"/>
</beans:bean>

<beans:bean id="viewResolver" class="org.springframework.web.servlet.view.tiles2.TilesViewResolver">
    <beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles2.TilesView"/>
</beans:bean>
	
	<beans:bean id="shape" class="net.codejava.springmvc.Rectangle">
		<beans:property name="width" value="10" />
		<beans:property name="height" value="20" />
	</beans:bean>
	
	<beans:bean id="circle" class="net.codejava.springmvc.Circle">
		<beans:constructor-arg index="0" value="10" />
	</beans:bean>
	
	<beans:bean id="shake" class="net.codejava.springmvc.Rectangle">
		<beans:property name="width" value="15" />
		<beans:property name="height" value="15" />
	</beans:bean>
	
	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	
	<beans:bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<beans:property name="basename" value="classpath:messages" />
		<beans:property name="defaultEncoding" value="UTF-8" />
	</beans:bean>
	
	<beans:bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
		<beans:property name="paramName" value="lang" />
	</beans:bean>
		
	<beans:bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
		<beans:property name="defaultLocale" value="en" />
	</beans:bean>

	<beans:bean class="org.springframework.web.servlet.mvc.support.ControllerClassNameHandlerMapping" >
		<beans:property name="interceptors">
			<beans:ref bean="localeChangeInterceptor" />
		</beans:property>
	</beans:bean>
	
	<!--<context:component-scan base-package="net.codejava.springmvc" />-->
	
	
	
</beans:beans>
